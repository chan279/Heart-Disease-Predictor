
1. Importing the packages
2. Exploring the dataset 
	- Heart Disease 
3. Data processing
	- Pandas Dataframe
	- Cleaning the datset
4. Visualization using seaborn & matplotlib
5. Feature Engineering 
	- RFECV 
	- PCA for reduction of Features
6. Appending the Feature column to X and Target to Y
7. Splitting the data to train and test for Deep LEarning and Taking X and Y for Machine Learning
8. Building the model with Hyperparameter and k fold Cross validation
	
	- Logistic Regression
	- Decision Tree
	- Random Forest
	- SVM
	- KNN
	- MLP
	- Naive Bayes
	- XGBoost
	- Gradient Boositng
	- Stacking Classifier ( RF + DT with LightGBM)
 
9. Training the model with hyperparameter and K fold cross validation
10. Comparing the result
11. Building the model with selected features with the highest accuracy score


Flask Framework
----------------

 
12. Flask Framework with Sqlite for signup and signin
13. Importing the packages
14. User gives input as Feature Values 
15. The given input is preprocessed for prediction
16. Trained model is used for prediction
17. Final outcome is displayed through frontend


Extension
----------

In the base paper the author mentioned to use feature engineer techinque (PCA and RFECV) for  reduction the feature and analysis the dataset with Machine learning 
models likeLogistic Regression, Decision Tree, Random Forest, SVM, KNN, MLP,  Naive Bayes, XGBoost, Gradient Boositng, from which PCHF RF & DT got 100% accuracy,

As an extension we applied ensemble method  combine the predictions of multiple individual models to produce a more robust and accurate final prediction.
However, we can further enhance the performance by exploring other ensemble techniques such as Stacking Classifier with RF + MLP with LightGBM with PCHF got 
100% accyracy,

For model building we used selected features based PCHF and used Stacking Classifier model to train, from which the model is used for predcitionin the frontend,

As an extension we can build front end using flask framework for user testing and with user authenication.